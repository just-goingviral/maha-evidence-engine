name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'

jobs:
  # Linting and code quality checks
  lint:
    name: Lint and Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './apps/web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./apps/web
        run: npm ci
      
      - name: Run ESLint
        working-directory: ./apps/web
        run: npm run lint
      
      - name: Check TypeScript
        working-directory: ./apps/web
        run: npx tsc --noEmit

  # Unit and integration tests
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './apps/web/package-lock.json'
      
      - name: Install dependencies
        working-directory: ./apps/web
        run: npm ci
      
      - name: Run tests with coverage
        working-directory: ./apps/web
        run: npm run test:ci
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ./apps/web/coverage
          flags: unittests
          name: codecov-${{ matrix.node-version }}

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Run npm audit
        working-directory: ./apps/web
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # Build Docker images
  build:
    name: Build Docker Images
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Web image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/web
          push: false
          tags: maha-evidence-engine/web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker Compose
        run: |
          cp .env.example .env
          docker compose build
          docker compose config

  # Integration tests with Docker Compose
  integration:
    name: Integration Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Docker Compose
        run: |
          cp .env.example .env
          docker compose build
      
      - name: Run integration tests
        run: |
          docker compose up -d
          sleep 30
          curl -f http://localhost/health || exit 1
          docker compose down

  # Dependency check
  dependencies:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Check for outdated dependencies
        working-directory: ./apps/web
        run: |
          npm outdated || true
      
      - name: License check
        working-directory: ./apps/web
        run: |
          npx license-checker --production --summary
